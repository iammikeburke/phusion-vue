{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/(webpack)/buildin/module.js","webpack://[name]/./exports/build/ClassmapTask.ts","webpack://[name]/./node_modules/ansi-styles/index.js","webpack://[name]/./node_modules/chalk/index.js","webpack://[name]/./node_modules/chalk/templates.js","webpack://[name]/./node_modules/color-convert/conversions.js","webpack://[name]/./node_modules/color-convert/index.js","webpack://[name]/./node_modules/color-convert/route.js","webpack://[name]/./node_modules/color-name/index.js","webpack://[name]/./node_modules/escape-string-regexp/index.js","webpack://[name]/./node_modules/has-flag/index.js","webpack://[name]/./node_modules/phusion/src/build/module/AbstractModule.ts","webpack://[name]/./node_modules/phusion/src/build/module/Config/ConfigModule.ts","webpack://[name]/./node_modules/phusion/src/build/module/Config/Entity/Config.ts","webpack://[name]/./node_modules/phusion/src/build/module/Config/MergeHandler/AbstractMergeHandler.ts","webpack://[name]/./node_modules/phusion/src/build/module/Config/MergeHandler/Default/DefaultMergeHandler.ts","webpack://[name]/./node_modules/phusion/src/build/module/Config/MergeHandler/Environment/EnvironmentMergeHandler.ts","webpack://[name]/./node_modules/phusion/src/build/module/FileSystem/FileSystemModule.ts","webpack://[name]/./node_modules/phusion/src/build/module/Log/LogModule.ts","webpack://[name]/./node_modules/phusion/src/build/module/ModuleContainer.ts","webpack://[name]/./node_modules/phusion/src/build/task/AbstractTask.ts","webpack://[name]/./node_modules/supports-color/index.js","webpack://[name]/./node_modules/yamljs/lib/Dumper.js","webpack://[name]/./node_modules/yamljs/lib/Escaper.js","webpack://[name]/./node_modules/yamljs/lib/Exception/DumpException.js","webpack://[name]/./node_modules/yamljs/lib/Exception/ParseException.js","webpack://[name]/./node_modules/yamljs/lib/Exception/ParseMore.js","webpack://[name]/./node_modules/yamljs/lib/Inline.js","webpack://[name]/./node_modules/yamljs/lib/Parser.js","webpack://[name]/./node_modules/yamljs/lib/Pattern.js","webpack://[name]/./node_modules/yamljs/lib/Unescaper.js","webpack://[name]/./node_modules/yamljs/lib/Utils.js","webpack://[name]/./node_modules/yamljs/lib/Yaml.js","webpack://[name]/./src/build/module/Autoload/AutoloadModule.ts","webpack://[name]/./src/build/module/ModuleContainer.ts","webpack://[name]/./src/build/task/ClassmapTask.ts","webpack://[name]/external \"fs\"","webpack://[name]/external \"os\"","webpack://[name]/external \"path\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBA,sHAA+D;AAE/D,MAAM,CAAC,OAAO,GAAG,2BAAY,CAAC;;;;;;;;;;;;;ACH9B,8CAAa;AACb,qBAAqB,mBAAO,CAAC,4DAAe;;AAE5C;AACA;AACA,kBAAkB,cAAc;AAChC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,KAAK;AACxC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B,qBAAqB,SAAS;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;ACpKY;AACb,2BAA2B,mBAAO,CAAC,0EAAsB;AACzD,mBAAmB,mBAAO,CAAC,wDAAa;AACxC,oBAAoB,mBAAO,CAAC,8DAAgB;;AAE5C,iBAAiB,mBAAO,CAAC,yDAAgB;;AAEzC;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,WAAW,IAAI,UAAU;AAC1D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC,6CAA6C;AAC7C;AACA;;AAEA;AACA;;AAEA;;AAEA,yBAAyB;AACzB;AACA,wCAAwC;;;;;;;;;;;;;ACnO3B;AACb,uCAAuC,EAAE,UAAU,EAAE,UAAU,uEAAuE;AACtI;AACA;AACA,kCAAkC,EAAE,UAAU,EAAE;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,6DAA6D,MAAM,cAAc,KAAK;AACtF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD,GAAG;AACH;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;;AAEA;AACA,sDAAsD,cAAc,kBAAkB,+BAA+B,KAAK;AAC1H;AACA;;AAEA;AACA;;;;;;;;;;;;AC/HA;AACA,kBAAkB,mBAAO,CAAC,sDAAY;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,QAAQ,4BAA4B;AACpC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,6BAA6B;AACpC,WAAW,iCAAiC;AAC5C,UAAU,gCAAgC;AAC1C,WAAW,iCAAiC;AAC5C,OAAO,qCAAqC;AAC5C,SAAS,2CAA2C;AACpD,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,mDAAmD,cAAc;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO,QAAQ;AAC/B,gBAAgB,OAAO,QAAQ;AAC/B,iBAAiB,OAAO,OAAO;AAC/B,iBAAiB,OAAO,OAAO;AAC/B,gBAAgB,QAAQ,OAAO;AAC/B,gBAAgB,QAAQ,OAAO;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,EAAE,UAAU,EAAE;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACn2BA,kBAAkB,mBAAO,CAAC,kEAAe;AACzC,YAAY,mBAAO,CAAC,sDAAS;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,uCAAuC;AAC/F,sDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;AAED;;;;;;;;;;;;AC7EA,kBAAkB,mBAAO,CAAC,kEAAe;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC/FY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvJa;;AAEb,8BAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA;AACA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AC,eAAe,CAAC;IAC7B,CAAC;IACF,mBAAC;AAAD,CAAC;AAxKqB,oCAAY;;;;;;;;;;;;;ACJrB;AACb,WAAW,mBAAO,CAAC,cAAI;AACvB,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClIA;AACA;;AAEA,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,SAAS,mBAAO,CAAC,qDAAU;;AAE3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACpDA;AACA;;AAEA,UAAU,mBAAO,CAAC,uDAAW;;AAE7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACvDA;AACA;AACA,oCAAoC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC5R,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1BA;AACA;AACA,oCAAoC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC5R,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1BA;AACA;AACA,oCAAoC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC5R,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1BA;AACA;AACA,0CAA0C,iCAAiC,OAAO,OAAO,6CAA6C,EAAE,WAAW;;AAEnJ,UAAU,mBAAO,CAAC,uDAAW;;AAE7B,YAAY,mBAAO,CAAC,2DAAa;;AAEjC,UAAU,mBAAO,CAAC,uDAAW;;AAE7B,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,iBAAiB,mBAAO,CAAC,yFAA4B;;AAErD,YAAY,mBAAO,CAAC,+EAAuB;;AAE3C,gBAAgB,mBAAO,CAAC,uFAA2B;;AAEnD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACpeA;AACA;;AAEA,SAAS,mBAAO,CAAC,qDAAU;;AAE3B,UAAU,mBAAO,CAAC,uDAAW;;AAE7B,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,iBAAiB,mBAAO,CAAC,yFAA4B;;AAErD,YAAY,mBAAO,CAAC,+EAAuB;;AAE3C;AACA;;AAEA;;AAEA;;AAEA;;AAEA,+GAA+G;;AAE/G,8GAA8G;;AAE9G;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sEAAsE;AAC/E;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1lBA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACtHA;AACA;;AAEA,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,UAAU,mBAAO,CAAC,uDAAW;;AAE7B;AACA;;AAEA,kGAAkG,EAAE,cAAc,EAAE,cAAc,EAAE;;AAEpI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AClFA;AACA;AACA,cAAc;;AAEd,UAAU,mBAAO,CAAC,uDAAW;;AAE7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,mBAAG,CAAC,cAAI;AACnB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACxSA;AACA;;AAEA,SAAS,mBAAO,CAAC,qDAAU;;AAE3B,SAAS,mBAAO,CAAC,qDAAU;;AAE3B,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"ClassmapTask.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./exports/build/ClassmapTask.ts\");\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\nimport {ClassmapTask} from \"../../src/build/task/ClassmapTask\";\n\nmodule.exports = ClassmapTask;","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","import {ModuleContainer} from \"./ModuleContainer\";\n\nexport abstract class AbstractModule\n{\n\tprotected moduleContainer: ModuleContainer;\n\n\tpublic constructor(moduleContainer: ModuleContainer)\n\t{\n\t\tthis.moduleContainer = moduleContainer;\n\t}\n\n\tprotected getModuleContainer(): ModuleContainer\n\t{\n\t\treturn this.moduleContainer;\n\t}\n\n}","import {AbstractModule} from \"../AbstractModule\";\nimport {ConfigModuleInterface} from \"./ConfigModuleInterface\";\nimport {Config} from \"./Entity/Config\";\nimport {DefaultMergeHandler} from \"./MergeHandler/Default/DefaultMergeHandler\";\nimport {EnvironmentMergeHandler} from \"./MergeHandler/Environment/EnvironmentMergeHandler\";\n\nexport class ConfigModule extends AbstractModule implements ConfigModuleInterface\n{\n\tprotected masterConfig: Object = {};\n\n\tpublic toConfig(object: Object): Config\n\t{\n\t\treturn new Config(object, this.getModuleContainer());\n\t}\n\n\tpublic generateConfig(configDirPath: string, outputFilePath: string, outputFormat: string = 'js', variableName: string = 'config'): boolean\n\t{\n\t\t// Reset master config\n\t\tthis.masterConfig = {};\n\n\t\tlet fileSystemModule = this.getModuleContainer().getFileSystemModule();\n\t\tlet configMergeHandlerArray = this.getConfigMergeHandlers();\n\n\t\t// For each merge handler\n\t\tfor (let mergeHandlerKey in configMergeHandlerArray)\n\t\t\tif (configMergeHandlerArray.hasOwnProperty(mergeHandlerKey))\n\t\t\t{\n\t\t\t\t// Define merge handler in current iteration\n\t\t\t\tlet mergeHandlerClass = configMergeHandlerArray[mergeHandlerKey];\n\t\t\t\tlet mergeHandler = new mergeHandlerClass();\n\n\t\t\t\t// If configs should be merged\n\t\t\t\tif (mergeHandler.shouldMerge())\n\t\t\t\t{\n\t\t\t\t\t// Create regex object\n\t\t\t\t\tlet regex = new RegExp(mergeHandler.getRegexPattern());\n\n\t\t\t\t\t// Get array of file names in config directory\n\t\t\t\t\tlet fileArray;\n\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Try to read all files from the config directory\n\t\t\t\t\t\tfileArray = fileSystemModule.getFiles(configDirPath);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e)\n\t\t\t\t\t{\n\t\t\t\t\t\t// If config directory doesn't exists, the readdirSync method will throw an error\n\t\t\t\t\t\t// If this happens, we just skip to the next merge handler\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For each file in the config directory\n\t\t\t\t\tfor (let fileKey in fileArray)\n\t\t\t\t\t\tif (fileArray.hasOwnProperty(fileKey))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet fileName = fileArray[fileKey];\n\n\t\t\t\t\t\t\t// Check if the filename matches the regex pattern\n\t\t\t\t\t\t\tlet fileMatches = regex.test(fileName);\n\n\t\t\t\t\t\t\t// If it matches\n\t\t\t\t\t\t\tif (fileMatches)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Build config file path (relative to this file)\n\t\t\t\t\t\t\t\tlet configFilePath = configDirPath + '/' + fileName;\n\n\t\t\t\t\t\t\t\t// Convert yaml contents to js object\n\t\t\t\t\t\t\t\tlet configObject = fileSystemModule.readYaml(configFilePath);\n\n\t\t\t\t\t\t\t\t// If yaml file is empty, it will return null\n\t\t\t\t\t\t\t\t// Without this conditional, if a yaml file is empty it will\n\t\t\t\t\t\t\t\t// overwrite all previously merged configs\n\t\t\t\t\t\t\t\tif (!configObject)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconfigObject = {};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Recursively merge config object into master config\n\t\t\t\t\t\t\t\tthis.masterConfig = this.merge(this.masterConfig, configObject);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// If config file already exists\n\t\t// Empty it\n\t\tfileSystemModule.writeFile(outputFilePath, '');\n\n\t\t// If no configs exists, we want to write an empty object to the config file\n\t\t// rather than the word 'null'\n\t\tif (!this.masterConfig)\n\t\t{\n\t\t\tthis.masterConfig = {};\n\t\t}\n\n\t\tlet fileContents = JSON.stringify(this.masterConfig, null, 2);\n\n\t\t// Format file contents depending on format provided\n\t\tif (outputFormat == 'json')\n\t\t{\n\t\t\t// Do nothing (file contents formatted for json by default)\n\t\t}\n\t\tif (outputFormat === 'node')\n\t\t{\n\t\t\tfileContents = '\\nmodule.exports = ' + fileContents + ';\\n';\n\t\t}\n\t\telse if (outputFormat == 'js')\n\t\t{\n\t\t\tfileContents = '\\nvar ' + variableName + ' = ' + fileContents + ';\\n';\n\t\t}\n\n\t\t// Write new generated config to output file\n\t\tfileSystemModule.writeFile(\n\t\t\toutputFilePath,\n\t\t\tfileContents\n\t\t);\n\n\t\treturn true;\n\t}\n\n\tpublic getObjectValueByKeyPath(keyPath: string, object: Object): any\n\t{\n\t\tif (!object)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\t// Split path into array of keys\n\t\tlet keysArray = keyPath.split(\":\");\n\n\t\t// Get the total number of keys\n\t\tlet keyCount = keysArray.length;\n\n\t\tlet count = 1;\n\n\t\t// For each key\n\t\tfor (let key of keysArray)\n\t\t{\n\t\t\t// If key exists\n\t\t\tif (object.hasOwnProperty(key))\n\t\t\t{\n\t\t\t\t// If this is the last key to be accessed\n\t\t\t\tif (count == keyCount)\n\t\t\t\t{\n\t\t\t\t\t// Return it\n\t\t\t\t\treturn object[key];\n\t\t\t\t}\n\n\t\t\t\t// If the key doesn't exist\n\t\t\t\tif (!object[key])\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Adjust object pointer for next key iteration\n\t\t\t\tobject = object[key];\n\n\t\t\t\t// Increment count\n\t\t\t\tcount++;\n\t\t\t} else\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tpublic merge(...objectsToMerge): Object\n\t{\n\t\treturn this.deepMergeObjects({}, ...objectsToMerge);\n\t}\n\n\tprivate deepMergeObjects(target: Object, ...sourceObjects: Array<Object>): Object\n\t{\n\t\t// If no sources passed in, return target\n\t\tif (!sourceObjects.length)\n\t\t{\n\t\t\treturn target;\n\t\t}\n\n\t\t// Get first source item\n\t\tconst source = sourceObjects.shift();\n\n\t\t// Assign functions that need to be used inside \"forEach\" function below\n\t\tlet deepMergeObjects = this.deepMergeObjects.bind(this);\n\t\tlet isMergebleObject = this.isMergeableObject.bind(this);\n\n\t\t// If target and source are both mergeble\n\t\tif (this.isMergeableObject(target) && this.isMergeableObject(source))\n\t\t{\n\t\t\t// For each object key in source object\n\t\t\tObject.keys(source).forEach(function (key: string)\n\t\t\t{\n\t\t\t\t// If value at current key is a mergeable object\n\t\t\t\tif (isMergebleObject(source[key]))\n\t\t\t\t{\n\t\t\t\t\t// If key doesn't exist on target\n\t\t\t\t\tif (!target[key])\n\t\t\t\t\t{\n\t\t\t\t\t\t// Set to empty object\n\t\t\t\t\t\ttarget[key] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Deep merge target value and source value\n\t\t\t\t\tdeepMergeObjects(target[key], source[key]);\n\t\t\t\t}\n\t\t\t\t// Else, if value is not a mergable object\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Set value\n\t\t\t\t\ttarget[key] = source[key];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn deepMergeObjects(target, ...sourceObjects);\n\t};\n\n\tprivate isMergeableObject(item): boolean\n\t{\n\t\treturn this.isObject(item) && !Array.isArray(item);\n\t};\n\n\tprivate isObject(item: any): boolean\n\t{\n\t\treturn typeof item === 'object';\n\t};\n\n\tprivate getConfigMergeHandlers(): Array<any>\n\t{\n\t\treturn [\n\t\t\tDefaultMergeHandler,\n\t\t\tEnvironmentMergeHandler\n\t\t];\n\t}\n}","import {ModuleContainer} from \"../../ModuleContainer\";\n\nexport class Config\n{\n\tprivate configObject: Object = {};\n\tprivate moduleContainer: ModuleContainer;\n\n\tpublic constructor(\n\t\tconfigObject: Object,\n\t\tmoduleContainer: ModuleContainer\n\t)\n\t{\n\t\tthis.configObject = configObject;\n\t\tthis.moduleContainer = moduleContainer;\n\t}\n\n\tpublic getByPath(\n\t\tconfigPath: string\n\t): any\n\t{\n\t\t// Parse config for value\n\t\tlet configValue = this\n\t\t\t.getModuleContainer()\n\t\t\t.getConfigModule()\n\t\t\t.getObjectValueByKeyPath(configPath, this.configObject);\n\n\t\t// If the value is an object\n\t\tif (\n\t\t\t!(Array.isArray(configValue))\n\t\t\t&&\n\t\t\tconfigValue instanceof Object\n\t\t)\n\t\t{\n\t\t\t// Return new instance of the Config class, constructed with the config value found\n\t\t\treturn new Config(configValue, this.getModuleContainer());\n\t\t}\n\n\t\treturn configValue;\n\t}\n\n\tpublic toObject(): Object\n\t{\n\t\treturn this.configObject;\n\t}\n\n\tprivate getModuleContainer(): ModuleContainer\n\t{\n\t\treturn this.moduleContainer;\n\t}\n}\n","\nexport abstract class AbstractMergeHandler\n{\n\n}","import {AbstractMergeHandler} from \"../AbstractMergeHandler\";\nimport {MergeHandlerInterface} from \"../MergeHandlerInterface\";\n\nexport class DefaultMergeHandler extends AbstractMergeHandler implements MergeHandlerInterface\n{\n\tpublic shouldMerge(): boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic getRegexPattern(): string\n\t{\n\t\treturn '^default-.+\\.yaml';\n\t}\n}","import {AbstractMergeHandler} from \"../AbstractMergeHandler\";\nimport {MergeHandlerInterface} from \"../MergeHandlerInterface\";\n\nexport class EnvironmentMergeHandler extends AbstractMergeHandler implements MergeHandlerInterface\n{\n\tprivate env: string;\n\n\tpublic shouldMerge(): boolean\n\t{\n\t\treturn (typeof this.getEnv() !== 'undefined');\n\t}\n\n\tpublic getRegexPattern(): string\n\t{\n\t\tlet env = this.getEnv();\n\t\treturn '^' + env + '-.+.yaml';\n\t}\n\n\tprivate getEnv(): string\n\t{\n\t\tif (!this.env)\n\t\t{\n\t\t\tthis.env = global.process.env.ENV;\n\t\t}\n\n\t\treturn this.env;\n\t}\n}","\nimport {AbstractModule} from \"../AbstractModule\";\nimport {FileSystemModuleInterface} from \"./FileSystemModuleInterface\";\n\nexport class FileSystemModule extends AbstractModule implements FileSystemModuleInterface\n{\n\tprivate nodeJsFileSystem: any;\n\tprivate nodeJsPath: any;\n\tprivate yamlJs: any;\n\n\tpublic createFile(absoluteFilePath: string): boolean\n\t{\n\t\ttry\n\t\t{\n\t\t\tthis\n\t\t\t\t.getNodeJsFileSystem()\n\t\t\t\t.writeFileSync(absoluteFilePath, '');\n\t\t}\n\t\tcatch(exception)\n\t\t{\n\t\t\tthrow exception;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tpublic fileExists(absoluteFilePath: string): boolean\n\t{\n\t\tlet fileExists;\n\n\t\ttry\n\t\t{\n\t\t\tthis.getNodeJsFileSystem().statSync(absoluteFilePath);\n\t\t\tfileExists = true;\n\t\t}\n\t\tcatch(exception)\n\t\t{\n\t\t\tfileExists = false;\n\t\t}\n\n\t\treturn fileExists;\n\t}\n\n\tpublic forEachFileRecursively(srcDirPath: string, callback:Function): this\n\t{\n\t\tlet itemsInScope = this.getDirContents(srcDirPath);\n\n\t\tfor (let key in itemsInScope)\n\t\t{\n\t\t\tlet fileName = itemsInScope[key];\n\t\t\tlet fullFilePath = srcDirPath + '/' + fileName;\n\n\t\t\tif (this.isDirectory(fullFilePath))\n\t\t\t{\n\t\t\t\tthis.forEachFileRecursively(fullFilePath, callback);\n\t\t\t}\n\t\t\telse if (this.isFile(fullFilePath))\n\t\t\t{\n\t\t\t\tcallback(fileName, fullFilePath);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic getDirContents(absoluteDirPath: string): Array<string>\n\t{\n\t\tlet dirItems = this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.readdirSync(absoluteDirPath);\n\n\t\treturn dirItems.filter((function(fileOrDirName)\n\t\t{\n\t\t\tlet stat = this\n\t\t\t\t.getNodeJsFileSystem()\n\t\t\t\t.statSync(absoluteDirPath + '/' + fileOrDirName);\n\t\t\treturn (stat.isFile() || stat.isDirectory());\n\t\t}).bind(this));\n\t}\n\n\tpublic getFiles(absoluteDirPath: string): Array<string>\n\t{\n\t\tlet dirItems = this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.readdirSync(absoluteDirPath);\n\n\t\treturn dirItems.filter((function(fileOrDirName)\n\t\t{\n\t\t\treturn this\n\t\t\t\t.getNodeJsFileSystem()\n\t\t\t\t.statSync(absoluteDirPath + fileOrDirName).isFile();\n\t\t}).bind(this));\n\t}\n\n\tpublic getRelativePathBetweenDirs(fromPath: string, toPath: string): string\n\t{\n\t\tconst path = this.getNodeJsPath();\n\n\t\treturn path.relative(fromPath, toPath);\n\t}\n\n\tpublic isDirectory(absoluteFilePath: string): boolean\n\t{\n\t\treturn this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.statSync(absoluteFilePath).isDirectory();\n\t}\n\n\tpublic isFile(absoluteFilePath: string): boolean\n\t{\n\t\treturn this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.statSync(absoluteFilePath).isFile();\n\t}\n\n\tpublic readAsTextString(absoluteFilePath: string): string\n\t{\n\t\treturn this.getNodeJsFileSystem().readFileSync(absoluteFilePath).toString();\n\t};\n\n  public readYaml(absoluteFilePath: string): Object\n  {\n\t  if (!this.fileExists(absoluteFilePath))\n\t  {\n\t\t  return null;\n\t  }\n\n\t  let yamlString = this.readAsTextString(absoluteFilePath);\n\n\t  // Return imported JavaScript array\n\t  return this.getYamlJs().parse(yamlString);\n  }\n\n\tpublic removeDir(absoluteDirPath: string): boolean\n\t{\n\t\tlet fs = this.getNodeJsFileSystem();\n\n\t\tif( fs.existsSync(absoluteDirPath) )\n\t\t{\n\t\t\tfs.readdirSync(absoluteDirPath).forEach(function(file,index)\n\t\t\t{\n\t\t\t\tvar currentPath = absoluteDirPath + \"/\" + file;\n\n\t\t\t\tif(fs.lstatSync(currentPath).isDirectory())\n\t\t\t\t{\n\t\t\t\t\t// recurse\n\t\t\t\t\tthis.removeDir(currentPath);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// delete file\n\t\t\t\t\tfs.unlinkSync(currentPath);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs.rmdirSync(absoluteDirPath);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tpublic removeFile(absoluteFilePath: string): boolean\n\t{\n\t\tlet fs = this.getNodeJsFileSystem();\n\n\t\tfs.unlinkSync(absoluteFilePath);\n\n\t\treturn true;\n\t};\n\n  public writeFile(absoluteFilePath: string, fileContents: string): boolean\n\t{\n\t\tlet fileExists = this.fileExists(absoluteFilePath);\n\n\t\t// If file doesn't exist\n\t\tif (fileExists == false)\n\t\t{\n\t\t\t// Create it\n\t\t\tthis\n\t\t\t\t.createFile(absoluteFilePath);\n\t\t}\n\n\t\ttry {\n\t\t\tthis.getNodeJsFileSystem().writeFileSync(\n\t\t\t\tabsoluteFilePath,\n\t\t\t\tfileContents,\n\t\t\t\t'utf-8'\n\t\t\t);\n\t\t}\n\t\tcatch(exception)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate getNodeJsFileSystem(): any\n\t{\n\t\tif (!this.nodeJsFileSystem)\n\t\t{\n\t\t\tthis.nodeJsFileSystem = require('fs')\n\t\t}\n\n\t\treturn this.nodeJsFileSystem;\n\t}\n\n\tprivate getNodeJsPath(): any\n\t{\n\t\tif (!this.nodeJsPath)\n\t\t{\n\t\t\tthis.nodeJsPath = require('path')\n\t\t}\n\n\t\treturn this.nodeJsPath;\n\t}\n\n\tprivate getYamlJs(): any\n\t{\n\t\tif (!this.yamlJs)\n\t\t{\n\t\t\tthis.yamlJs = require('yamljs')\n\t\t}\n\n\t\treturn this.yamlJs;\n\t}\n}","\nimport {AbstractModule} from \"../AbstractModule\";\nimport {LogModuleInterface} from \"./LogModuleInterface\";\n\nexport class LogModule extends AbstractModule implements LogModuleInterface\n{\n\tprivate chalk: any;\n\n\tpublic error(message: string): this\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.red(message));\n\t\treturn this;\n\t}\n\n\tpublic info(message: string): this\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.blue(message));\n\t\treturn this;\n\t}\n\n\tpublic success(message: string): this\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.green(message));\n\t\treturn this;\n\t}\n\n\tpublic warning(message: string): this\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.yellow(message));\n\t\treturn this;\n\t}\n\n\tpublic getLogPrefix()\n\t{\n\t\tlet chalk = this.getChalk();\n\t\tlet date = new Date();\n\t\tlet hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n\t\tlet minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\t\tlet seconds = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n\n\t\tlet timeString = hours + ':'\n\t\t\t+ minutes + ':'\n\t\t\t+ seconds;\n\n\t\treturn chalk.white('[') + chalk.grey(timeString) + chalk.white('] ');\n\t}\n\n\tprivate getChalk(): any\n\t{\n\t\tif (!this.chalk)\n\t\t{\n\t\t\tthis.chalk = require('chalk');\n\t\t}\n\n\t\treturn this.chalk;\n\t}\n}","\nimport {ConfigModuleInterface} from \"./Config/ConfigModuleInterface\";\nimport {FileSystemModuleInterface} from \"./FileSystem/FileSystemModuleInterface\";\nimport {LogModuleInterface} from \"./Log/LogModuleInterface\";\nimport {ConfigModule} from \"./Config/ConfigModule\";\nimport {FileSystemModule} from \"./FileSystem/FileSystemModule\";\nimport {LogModule} from \"./Log/LogModule\";\n\nexport class ModuleContainer\n{\n\tprotected configModule: ConfigModuleInterface;\n\tprotected fileSystemModule: FileSystemModuleInterface;\n\tprotected logModule: LogModuleInterface;\n\n\tpublic getConfigModule(): ConfigModuleInterface\n\t{\n\t\tif (!this.configModule)\n\t\t{\n\t\t\tthis.configModule = new ConfigModule(this);\n\t\t}\n\n\t\treturn this.configModule;\n\t}\n\n\tpublic getFileSystemModule(): FileSystemModuleInterface\n\t{\n\t\tif (!this.fileSystemModule)\n\t\t{\n\t\t\tthis.fileSystemModule = new FileSystemModule(this);\n\t\t}\n\n\t\treturn this.fileSystemModule;\n\t}\n\n\tpublic getLogModule(): LogModuleInterface\n\t{\n\t\tif (!this.logModule)\n\t\t{\n\t\t\tthis.logModule = new LogModule(this);\n\t\t}\n\n\t\treturn this.logModule;\n\t}\n}","\nimport {ModuleContainer} from \"../module/ModuleContainer\";\nimport {Config} from \"../module/Config/Entity/Config\";\n\nexport abstract class AbstractTask\n{\n\tprotected moduleContainer: ModuleContainer;\n\tprotected taskConfig: Config;\n\tprotected running: boolean = false;\n\tprotected queued: number = 0;\n\tprotected queueLimit: number = 0;\n\n\tpublic constructor(taskConfig: Object = {})\n\t{\n\t\t// Get default task config\n\t\tlet defaultConfig = this.getDefaultTaskConfig();\n\n\t\tlet configModule = this\n\t\t\t.getModuleContainer().getConfigModule();\n\n\t\t// Merge the default config with overrides\n\t\tlet mergedConfigObject = configModule\n\t\t\t.merge(defaultConfig, taskConfig);\n\n\t\t// Set task config as Config object\n\t\tthis.taskConfig = configModule.toConfig(mergedConfigObject);\n\n\t\tthis.validateTaskConfig();\n\t}\n\n\tpublic run()\n\t{\n\t\t// If task is already running\n\t\tif (this.running)\n\t\t{\n\t\t\t// Queue it up\n\t\t\tthis.queue();\n\t\t\treturn;\n\t\t}\n\n\t\tlet taskName = this.constructor['name'];\n\n\t\t// Log task as running\n\t\tthis.running = true;\n\t\tthis.logInfo(taskName + ': started');\n\n\t\t// Execute the task\n\t\tthis.exec();\n\n\t\tthis.running = false;\n\t\tthis.logInfo(taskName + ': finished');\n\n\t\tthis.shutdown();\n\t}\n\n\tprotected getDefaultTaskConfig(): Object\n\t{\n\t\treturn {};\n\t}\n\n\tprotected getTaskConfig(): Config\n\t{\n\t\treturn this.taskConfig;\n\t}\n\n\tprotected getRequiredTaskConfigPaths(): Object\n\t{\n\t\treturn {};\n\t}\n\n\tprotected validateTaskConfig(): this\n\t{\n\t\tthis.validateTaskConfigForRequiredPathsAndTypes();\n\n\t\treturn this;\n\t}\n\n\tprotected validateTaskConfigForRequiredPathsAndTypes(): this\n\t{\n\t\tlet requiredTaskConfigPaths = this.getRequiredTaskConfigPaths();\n\n\t\tfor (let requiredConfigPath in requiredTaskConfigPaths)\n\t\t\tif (requiredTaskConfigPaths.hasOwnProperty(requiredConfigPath))\n\t\t\t{\n\t\t\t\tlet requiredType = requiredTaskConfigPaths[requiredConfigPath];\n\n\t\t\t\tlet requiredConfigValue = this.getTaskConfig().getByPath(requiredConfigPath);\n\n\t\t\t\tlet actualType = typeof requiredConfigValue;\n\n\t\t\t\tif (!requiredConfigValue)\n\t\t\t\t{\n\t\t\t\t\tthis.logError(this.constructor['name'] + ': Invalid task config. Required key path not found: ' + requiredConfigPath);\n\t\t\t\t\tglobal.process.exit();\n\t\t\t\t}\n\t\t\t\telse if (actualType !== requiredType)\n\t\t\t\t{\n\t\t\t\t\tthis.logError(this.constructor['name'] + ': Invalid task config value for \"' + requiredConfigPath + '\". Expected type of ' + requiredType + ', received ' + actualType);\n\t\t\t\t\tglobal.process.exit();\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected queue()\n\t{\n\t\tif (this.queued < this.queueLimit)\n\t\t{\n\t\t\tthis.queued++;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected shutdown()\n\t{\n\t\t// Remove one from the queue\n\t\tthis.queued--;\n\n\t\t// If there are tasks in the queue\n\t\tif (this.queued > 0)\n\t\t{\n\t\t\t// Run it\n\t\t\tthis.run();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected exec()\n\t{\n\t\tthrow new Error('exec() method must be implemented');\n\t}\n\n\tprotected logError(message: string): this\n\t{\n\t\tthis.getModuleContainer().getLogModule().error(message);\n\n\t\treturn this;\n\t}\n\n\tprotected logInfo(message: string): this\n\t{\n\t\tthis.getModuleContainer().getLogModule().info(message);\n\n\t\treturn this;\n\t}\n\n\tprotected logSuccess(message: string): this\n\t{\n\t\tthis.getModuleContainer().getLogModule().success(message);\n\n\t\treturn this;\n\t}\n\n\tprotected logWarning(message: string): this\n\t{\n\t\tthis.getModuleContainer().getLogModule().warning(message);\n\n\t\treturn this;\n\t}\n\n\tprotected getModuleContainer(): ModuleContainer\n\t{\n\t\tif (!this.moduleContainer)\n\t\t{\n\t\t\tthis.moduleContainer = new ModuleContainer();\n\t\t}\n\n\t\treturn this.moduleContainer;\n\t}\n}","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n","// Generated by CoffeeScript 1.12.4\nvar Escaper, Pattern;\n\nPattern = require('./Pattern');\n\nEscaper = (function() {\n  var ch;\n\n  function Escaper() {}\n\n  Escaper.LIST_ESCAPEES = ['\\\\', '\\\\\\\\', '\\\\\"', '\"', \"\\x00\", \"\\x01\", \"\\x02\", \"\\x03\", \"\\x04\", \"\\x05\", \"\\x06\", \"\\x07\", \"\\x08\", \"\\x09\", \"\\x0a\", \"\\x0b\", \"\\x0c\", \"\\x0d\", \"\\x0e\", \"\\x0f\", \"\\x10\", \"\\x11\", \"\\x12\", \"\\x13\", \"\\x14\", \"\\x15\", \"\\x16\", \"\\x17\", \"\\x18\", \"\\x19\", \"\\x1a\", \"\\x1b\", \"\\x1c\", \"\\x1d\", \"\\x1e\", \"\\x1f\", (ch = String.fromCharCode)(0x0085), ch(0x00A0), ch(0x2028), ch(0x2029)];\n\n  Escaper.LIST_ESCAPED = ['\\\\\\\\', '\\\\\"', '\\\\\"', '\\\\\"', \"\\\\0\", \"\\\\x01\", \"\\\\x02\", \"\\\\x03\", \"\\\\x04\", \"\\\\x05\", \"\\\\x06\", \"\\\\a\", \"\\\\b\", \"\\\\t\", \"\\\\n\", \"\\\\v\", \"\\\\f\", \"\\\\r\", \"\\\\x0e\", \"\\\\x0f\", \"\\\\x10\", \"\\\\x11\", \"\\\\x12\", \"\\\\x13\", \"\\\\x14\", \"\\\\x15\", \"\\\\x16\", \"\\\\x17\", \"\\\\x18\", \"\\\\x19\", \"\\\\x1a\", \"\\\\e\", \"\\\\x1c\", \"\\\\x1d\", \"\\\\x1e\", \"\\\\x1f\", \"\\\\N\", \"\\\\_\", \"\\\\L\", \"\\\\P\"];\n\n  Escaper.MAPPING_ESCAPEES_TO_ESCAPED = (function() {\n    var i, j, mapping, ref;\n    mapping = {};\n    for (i = j = 0, ref = Escaper.LIST_ESCAPEES.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      mapping[Escaper.LIST_ESCAPEES[i]] = Escaper.LIST_ESCAPED[i];\n    }\n    return mapping;\n  })();\n\n  Escaper.PATTERN_CHARACTERS_TO_ESCAPE = new Pattern('[\\\\x00-\\\\x1f]|\\xc2\\x85|\\xc2\\xa0|\\xe2\\x80\\xa8|\\xe2\\x80\\xa9');\n\n  Escaper.PATTERN_MAPPING_ESCAPEES = new Pattern(Escaper.LIST_ESCAPEES.join('|').split('\\\\').join('\\\\\\\\'));\n\n  Escaper.PATTERN_SINGLE_QUOTING = new Pattern('[\\\\s\\'\":{}[\\\\],&*#?]|^[-?|<>=!%@`]');\n\n  Escaper.requiresDoubleQuoting = function(value) {\n    return this.PATTERN_CHARACTERS_TO_ESCAPE.test(value);\n  };\n\n  Escaper.escapeWithDoubleQuotes = function(value) {\n    var result;\n    result = this.PATTERN_MAPPING_ESCAPEES.replace(value, (function(_this) {\n      return function(str) {\n        return _this.MAPPING_ESCAPEES_TO_ESCAPED[str];\n      };\n    })(this));\n    return '\"' + result + '\"';\n  };\n\n  Escaper.requiresSingleQuoting = function(value) {\n    return this.PATTERN_SINGLE_QUOTING.test(value);\n  };\n\n  Escaper.escapeWithSingleQuotes = function(value) {\n    return \"'\" + value.replace(/'/g, \"''\") + \"'\";\n  };\n\n  return Escaper;\n\n})();\n\nmodule.exports = Escaper;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nDumpException = (function(superClass) {\n  extend(DumpException, superClass);\n\n  function DumpException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  DumpException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<DumpException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<DumpException> ' + this.message;\n    }\n  };\n\n  return DumpException;\n\n})(Error);\n\nmodule.exports = DumpException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseException = (function(superClass) {\n  extend(ParseException, superClass);\n\n  function ParseException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseException> ' + this.message;\n    }\n  };\n\n  return ParseException;\n\n})(Error);\n\nmodule.exports = ParseException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseMore,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseMore = (function(superClass) {\n  extend(ParseMore, superClass);\n\n  function ParseMore(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseMore.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseMore> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseMore> ' + this.message;\n    }\n  };\n\n  return ParseMore;\n\n})(Error);\n\nmodule.exports = ParseMore;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException, Escaper, Inline, ParseException, ParseMore, Pattern, Unescaper, Utils,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nPattern = require('./Pattern');\n\nUnescaper = require('./Unescaper');\n\nEscaper = require('./Escaper');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nDumpException = require('./Exception/DumpException');\n\nInline = (function() {\n  function Inline() {}\n\n  Inline.REGEX_QUOTED_STRING = '(?:\"(?:[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"|\\'(?:[^\\']*(?:\\'\\'[^\\']*)*)\\')';\n\n  Inline.PATTERN_TRAILING_COMMENTS = new Pattern('^\\\\s*#.*$');\n\n  Inline.PATTERN_QUOTED_SCALAR = new Pattern('^' + Inline.REGEX_QUOTED_STRING);\n\n  Inline.PATTERN_THOUSAND_NUMERIC_SCALAR = new Pattern('^(-|\\\\+)?[0-9,]+(\\\\.[0-9]+)?$');\n\n  Inline.PATTERN_SCALAR_BY_DELIMITERS = {};\n\n  Inline.settings = {};\n\n  Inline.configure = function(exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = null;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n  };\n\n  Inline.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var context, result;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n    if (value == null) {\n      return '';\n    }\n    value = Utils.trim(value);\n    if (0 === value.length) {\n      return '';\n    }\n    context = {\n      exceptionOnInvalidType: exceptionOnInvalidType,\n      objectDecoder: objectDecoder,\n      i: 0\n    };\n    switch (value.charAt(0)) {\n      case '[':\n        result = this.parseSequence(value, context);\n        ++context.i;\n        break;\n      case '{':\n        result = this.parseMapping(value, context);\n        ++context.i;\n        break;\n      default:\n        result = this.parseScalar(value, null, ['\"', \"'\"], context);\n    }\n    if (this.PATTERN_TRAILING_COMMENTS.replace(value.slice(context.i), '') !== '') {\n      throw new ParseException('Unexpected characters near \"' + value.slice(context.i) + '\".');\n    }\n    return result;\n  };\n\n  Inline.dump = function(value, exceptionOnInvalidType, objectEncoder) {\n    var ref, result, type;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    if (value == null) {\n      return 'null';\n    }\n    type = typeof value;\n    if (type === 'object') {\n      if (value instanceof Date) {\n        return value.toISOString();\n      } else if (objectEncoder != null) {\n        result = objectEncoder(value);\n        if (typeof result === 'string' || (result != null)) {\n          return result;\n        }\n      }\n      return this.dumpObject(value);\n    }\n    if (type === 'boolean') {\n      return (value ? 'true' : 'false');\n    }\n    if (Utils.isDigits(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseInt(value)));\n    }\n    if (Utils.isNumeric(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseFloat(value)));\n    }\n    if (type === 'number') {\n      return (value === 2e308 ? '.Inf' : (value === -2e308 ? '-.Inf' : (isNaN(value) ? '.NaN' : value)));\n    }\n    if (Escaper.requiresDoubleQuoting(value)) {\n      return Escaper.escapeWithDoubleQuotes(value);\n    }\n    if (Escaper.requiresSingleQuoting(value)) {\n      return Escaper.escapeWithSingleQuotes(value);\n    }\n    if ('' === value) {\n      return '\"\"';\n    }\n    if (Utils.PATTERN_DATE.test(value)) {\n      return \"'\" + value + \"'\";\n    }\n    if ((ref = value.toLowerCase()) === 'null' || ref === '~' || ref === 'true' || ref === 'false') {\n      return \"'\" + value + \"'\";\n    }\n    return value;\n  };\n\n  Inline.dumpObject = function(value, exceptionOnInvalidType, objectSupport) {\n    var j, key, len1, output, val;\n    if (objectSupport == null) {\n      objectSupport = null;\n    }\n    if (value instanceof Array) {\n      output = [];\n      for (j = 0, len1 = value.length; j < len1; j++) {\n        val = value[j];\n        output.push(this.dump(val));\n      }\n      return '[' + output.join(', ') + ']';\n    } else {\n      output = [];\n      for (key in value) {\n        val = value[key];\n        output.push(this.dump(key) + ': ' + this.dump(val));\n      }\n      return '{' + output.join(', ') + '}';\n    }\n  };\n\n  Inline.parseScalar = function(scalar, delimiters, stringDelimiters, context, evaluate) {\n    var i, joinedDelimiters, match, output, pattern, ref, ref1, strpos, tmp;\n    if (delimiters == null) {\n      delimiters = null;\n    }\n    if (stringDelimiters == null) {\n      stringDelimiters = ['\"', \"'\"];\n    }\n    if (context == null) {\n      context = null;\n    }\n    if (evaluate == null) {\n      evaluate = true;\n    }\n    if (context == null) {\n      context = {\n        exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n        objectDecoder: this.settings.objectDecoder,\n        i: 0\n      };\n    }\n    i = context.i;\n    if (ref = scalar.charAt(i), indexOf.call(stringDelimiters, ref) >= 0) {\n      output = this.parseQuotedScalar(scalar, context);\n      i = context.i;\n      if (delimiters != null) {\n        tmp = Utils.ltrim(scalar.slice(i), ' ');\n        if (!(ref1 = tmp.charAt(0), indexOf.call(delimiters, ref1) >= 0)) {\n          throw new ParseException('Unexpected characters (' + scalar.slice(i) + ').');\n        }\n      }\n    } else {\n      if (!delimiters) {\n        output = scalar.slice(i);\n        i += output.length;\n        strpos = output.indexOf(' #');\n        if (strpos !== -1) {\n          output = Utils.rtrim(output.slice(0, strpos));\n        }\n      } else {\n        joinedDelimiters = delimiters.join('|');\n        pattern = this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters];\n        if (pattern == null) {\n          pattern = new Pattern('^(.+?)(' + joinedDelimiters + ')');\n          this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters] = pattern;\n        }\n        if (match = pattern.exec(scalar.slice(i))) {\n          output = match[1];\n          i += output.length;\n        } else {\n          throw new ParseException('Malformed inline YAML string (' + scalar + ').');\n        }\n      }\n      if (evaluate) {\n        output = this.evaluateScalar(output, context);\n      }\n    }\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseQuotedScalar = function(scalar, context) {\n    var i, match, output;\n    i = context.i;\n    if (!(match = this.PATTERN_QUOTED_SCALAR.exec(scalar.slice(i)))) {\n      throw new ParseMore('Malformed inline YAML string (' + scalar.slice(i) + ').');\n    }\n    output = match[0].substr(1, match[0].length - 2);\n    if ('\"' === scalar.charAt(i)) {\n      output = Unescaper.unescapeDoubleQuotedString(output);\n    } else {\n      output = Unescaper.unescapeSingleQuotedString(output);\n    }\n    i += match[0].length;\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseSequence = function(sequence, context) {\n    var e, i, isQuoted, len, output, ref, value;\n    output = [];\n    len = sequence.length;\n    i = context.i;\n    i += 1;\n    while (i < len) {\n      context.i = i;\n      switch (sequence.charAt(i)) {\n        case '[':\n          output.push(this.parseSequence(sequence, context));\n          i = context.i;\n          break;\n        case '{':\n          output.push(this.parseMapping(sequence, context));\n          i = context.i;\n          break;\n        case ']':\n          return output;\n        case ',':\n        case ' ':\n        case \"\\n\":\n          break;\n        default:\n          isQuoted = ((ref = sequence.charAt(i)) === '\"' || ref === \"'\");\n          value = this.parseScalar(sequence, [',', ']'], ['\"', \"'\"], context);\n          i = context.i;\n          if (!isQuoted && typeof value === 'string' && (value.indexOf(': ') !== -1 || value.indexOf(\":\\n\") !== -1)) {\n            try {\n              value = this.parseMapping('{' + value + '}');\n            } catch (error) {\n              e = error;\n            }\n          }\n          output.push(value);\n          --i;\n      }\n      ++i;\n    }\n    throw new ParseMore('Malformed inline YAML string ' + sequence);\n  };\n\n  Inline.parseMapping = function(mapping, context) {\n    var done, i, key, len, output, shouldContinueWhileLoop, value;\n    output = {};\n    len = mapping.length;\n    i = context.i;\n    i += 1;\n    shouldContinueWhileLoop = false;\n    while (i < len) {\n      context.i = i;\n      switch (mapping.charAt(i)) {\n        case ' ':\n        case ',':\n        case \"\\n\":\n          ++i;\n          context.i = i;\n          shouldContinueWhileLoop = true;\n          break;\n        case '}':\n          return output;\n      }\n      if (shouldContinueWhileLoop) {\n        shouldContinueWhileLoop = false;\n        continue;\n      }\n      key = this.parseScalar(mapping, [':', ' ', \"\\n\"], ['\"', \"'\"], context, false);\n      i = context.i;\n      done = false;\n      while (i < len) {\n        context.i = i;\n        switch (mapping.charAt(i)) {\n          case '[':\n            value = this.parseSequence(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case '{':\n            value = this.parseMapping(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case ':':\n          case ' ':\n          case \"\\n\":\n            break;\n          default:\n            value = this.parseScalar(mapping, [',', '}'], ['\"', \"'\"], context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            --i;\n        }\n        ++i;\n        if (done) {\n          break;\n        }\n      }\n    }\n    throw new ParseMore('Malformed inline YAML string ' + mapping);\n  };\n\n  Inline.evaluateScalar = function(scalar, context) {\n    var cast, date, exceptionOnInvalidType, firstChar, firstSpace, firstWord, objectDecoder, raw, scalarLower, subValue, trimmedScalar;\n    scalar = Utils.trim(scalar);\n    scalarLower = scalar.toLowerCase();\n    switch (scalarLower) {\n      case 'null':\n      case '':\n      case '~':\n        return null;\n      case 'true':\n        return true;\n      case 'false':\n        return false;\n      case '.inf':\n        return 2e308;\n      case '.nan':\n        return 0/0;\n      case '-.inf':\n        return 2e308;\n      default:\n        firstChar = scalarLower.charAt(0);\n        switch (firstChar) {\n          case '!':\n            firstSpace = scalar.indexOf(' ');\n            if (firstSpace === -1) {\n              firstWord = scalarLower;\n            } else {\n              firstWord = scalarLower.slice(0, firstSpace);\n            }\n            switch (firstWord) {\n              case '!':\n                if (firstSpace !== -1) {\n                  return parseInt(this.parseScalar(scalar.slice(2)));\n                }\n                return null;\n              case '!str':\n                return Utils.ltrim(scalar.slice(4));\n              case '!!str':\n                return Utils.ltrim(scalar.slice(5));\n              case '!!int':\n                return parseInt(this.parseScalar(scalar.slice(5)));\n              case '!!bool':\n                return Utils.parseBoolean(this.parseScalar(scalar.slice(6)), false);\n              case '!!float':\n                return parseFloat(this.parseScalar(scalar.slice(7)));\n              case '!!timestamp':\n                return Utils.stringToDate(Utils.ltrim(scalar.slice(11)));\n              default:\n                if (context == null) {\n                  context = {\n                    exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n                    objectDecoder: this.settings.objectDecoder,\n                    i: 0\n                  };\n                }\n                objectDecoder = context.objectDecoder, exceptionOnInvalidType = context.exceptionOnInvalidType;\n                if (objectDecoder) {\n                  trimmedScalar = Utils.rtrim(scalar);\n                  firstSpace = trimmedScalar.indexOf(' ');\n                  if (firstSpace === -1) {\n                    return objectDecoder(trimmedScalar, null);\n                  } else {\n                    subValue = Utils.ltrim(trimmedScalar.slice(firstSpace + 1));\n                    if (!(subValue.length > 0)) {\n                      subValue = null;\n                    }\n                    return objectDecoder(trimmedScalar.slice(0, firstSpace), subValue);\n                  }\n                }\n                if (exceptionOnInvalidType) {\n                  throw new ParseException('Custom object support when parsing a YAML file has been disabled.');\n                }\n                return null;\n            }\n            break;\n          case '0':\n            if ('0x' === scalar.slice(0, 2)) {\n              return Utils.hexDec(scalar);\n            } else if (Utils.isDigits(scalar)) {\n              return Utils.octDec(scalar);\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else {\n              return scalar;\n            }\n            break;\n          case '+':\n            if (Utils.isDigits(scalar)) {\n              raw = scalar;\n              cast = parseInt(raw);\n              if (raw === String(cast)) {\n                return cast;\n              } else {\n                return raw;\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          case '-':\n            if (Utils.isDigits(scalar.slice(1))) {\n              if ('0' === scalar.charAt(1)) {\n                return -Utils.octDec(scalar.slice(1));\n              } else {\n                raw = scalar.slice(1);\n                cast = parseInt(raw);\n                if (raw === String(cast)) {\n                  return -cast;\n                } else {\n                  return -raw;\n                }\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          default:\n            if (date = Utils.stringToDate(scalar)) {\n              return date;\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n        }\n    }\n  };\n\n  return Inline;\n\n})();\n\nmodule.exports = Inline;\n","// Generated by CoffeeScript 1.12.4\nvar Inline, ParseException, ParseMore, Parser, Pattern, Utils;\n\nInline = require('./Inline');\n\nPattern = require('./Pattern');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nParser = (function() {\n  Parser.prototype.PATTERN_FOLDED_SCALAR_ALL = new Pattern('^(?:(?<type>![^\\\\|>]*)\\\\s+)?(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_END = new Pattern('(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_SEQUENCE_ITEM = new Pattern('^\\\\-((?<leadspaces>\\\\s+)(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_ANCHOR_VALUE = new Pattern('^&(?<ref>[^ ]+) *(?<value>.*)');\n\n  Parser.prototype.PATTERN_COMPACT_NOTATION = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\{\\\\[].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_MAPPING_ITEM = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\[\\\\{].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_DECIMAL = new Pattern('\\\\d+');\n\n  Parser.prototype.PATTERN_INDENT_SPACES = new Pattern('^ +');\n\n  Parser.prototype.PATTERN_TRAILING_LINES = new Pattern('(\\n*)$');\n\n  Parser.prototype.PATTERN_YAML_HEADER = new Pattern('^\\\\%YAML[: ][\\\\d\\\\.]+.*\\n', 'm');\n\n  Parser.prototype.PATTERN_LEADING_COMMENTS = new Pattern('^(\\\\#.*?\\n)+', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_START = new Pattern('^\\\\-\\\\-\\\\-.*?\\n', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_END = new Pattern('^\\\\.\\\\.\\\\.\\\\s*$', 'm');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION = {};\n\n  Parser.prototype.CONTEXT_NONE = 0;\n\n  Parser.prototype.CONTEXT_SEQUENCE = 1;\n\n  Parser.prototype.CONTEXT_MAPPING = 2;\n\n  function Parser(offset) {\n    this.offset = offset != null ? offset : 0;\n    this.lines = [];\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.refs = {};\n  }\n\n  Parser.prototype.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var alias, allowOverwrite, block, c, context, data, e, first, i, indent, isRef, j, k, key, l, lastKey, len, len1, len2, len3, lineCount, m, matches, mergeNode, n, name, parsed, parsedItem, parser, ref, ref1, ref2, refName, refValue, val, values;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.lines = this.cleanup(value).split(\"\\n\");\n    data = null;\n    context = this.CONTEXT_NONE;\n    allowOverwrite = false;\n    while (this.moveToNextLine()) {\n      if (this.isCurrentLineEmpty()) {\n        continue;\n      }\n      if (\"\\t\" === this.currentLine[0]) {\n        throw new ParseException('A YAML file cannot contain tabs as indentation.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      isRef = mergeNode = false;\n      if (values = this.PATTERN_SEQUENCE_ITEM.exec(this.currentLine)) {\n        if (this.CONTEXT_MAPPING === context) {\n          throw new ParseException('You cannot define a sequence item when in a mapping');\n        }\n        context = this.CONTEXT_SEQUENCE;\n        if (data == null) {\n          data = [];\n        }\n        if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (this.currentLineNb < this.lines.length - 1 && !this.isNextLineUnIndentedCollection()) {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            data.push(parser.parse(this.getNextEmbedBlock(null, true), exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(null);\n          }\n        } else {\n          if (((ref = values.leadspaces) != null ? ref.length : void 0) && (matches = this.PATTERN_COMPACT_NOTATION.exec(values.value))) {\n            c = this.getRealCurrentLineNb();\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            block = values.value;\n            indent = this.getCurrentLineIndentation();\n            if (this.isNextLineIndented(false)) {\n              block += \"\\n\" + this.getNextEmbedBlock(indent + values.leadspaces.length + 1, true);\n            }\n            data.push(parser.parse(block, exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(this.parseValue(values.value, exceptionOnInvalidType, objectDecoder));\n          }\n        }\n      } else if ((values = this.PATTERN_MAPPING_ITEM.exec(this.currentLine)) && values.key.indexOf(' #') === -1) {\n        if (this.CONTEXT_SEQUENCE === context) {\n          throw new ParseException('You cannot define a mapping item when in a sequence');\n        }\n        context = this.CONTEXT_MAPPING;\n        if (data == null) {\n          data = {};\n        }\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        try {\n          key = Inline.parseScalar(values.key);\n        } catch (error) {\n          e = error;\n          e.parsedLine = this.getRealCurrentLineNb() + 1;\n          e.snippet = this.currentLine;\n          throw e;\n        }\n        if ('<<' === key) {\n          mergeNode = true;\n          allowOverwrite = true;\n          if (((ref1 = values.value) != null ? ref1.indexOf('*') : void 0) === 0) {\n            refName = values.value.slice(1);\n            if (this.refs[refName] == null) {\n              throw new ParseException('Reference \"' + refName + '\" does not exist.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            refValue = this.refs[refName];\n            if (typeof refValue !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (refValue instanceof Array) {\n              for (i = j = 0, len = refValue.length; j < len; i = ++j) {\n                value = refValue[i];\n                if (data[name = String(i)] == null) {\n                  data[name] = value;\n                }\n              }\n            } else {\n              for (key in refValue) {\n                value = refValue[key];\n                if (data[key] == null) {\n                  data[key] = value;\n                }\n              }\n            }\n          } else {\n            if ((values.value != null) && values.value !== '') {\n              value = values.value;\n            } else {\n              value = this.getNextEmbedBlock();\n            }\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            parsed = parser.parse(value, exceptionOnInvalidType);\n            if (typeof parsed !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (parsed instanceof Array) {\n              for (l = 0, len1 = parsed.length; l < len1; l++) {\n                parsedItem = parsed[l];\n                if (typeof parsedItem !== 'object') {\n                  throw new ParseException('Merge items must be objects.', this.getRealCurrentLineNb() + 1, parsedItem);\n                }\n                if (parsedItem instanceof Array) {\n                  for (i = m = 0, len2 = parsedItem.length; m < len2; i = ++m) {\n                    value = parsedItem[i];\n                    k = String(i);\n                    if (!data.hasOwnProperty(k)) {\n                      data[k] = value;\n                    }\n                  }\n                } else {\n                  for (key in parsedItem) {\n                    value = parsedItem[key];\n                    if (!data.hasOwnProperty(key)) {\n                      data[key] = value;\n                    }\n                  }\n                }\n              }\n            } else {\n              for (key in parsed) {\n                value = parsed[key];\n                if (!data.hasOwnProperty(key)) {\n                  data[key] = value;\n                }\n              }\n            }\n          }\n        } else if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (mergeNode) {\n\n        } else if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (!(this.isNextLineIndented()) && !(this.isNextLineUnIndentedCollection())) {\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = null;\n            }\n          } else {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            val = parser.parse(this.getNextEmbedBlock(), exceptionOnInvalidType, objectDecoder);\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = val;\n            }\n          }\n        } else {\n          val = this.parseValue(values.value, exceptionOnInvalidType, objectDecoder);\n          if (allowOverwrite || data[key] === void 0) {\n            data[key] = val;\n          }\n        }\n      } else {\n        lineCount = this.lines.length;\n        if (1 === lineCount || (2 === lineCount && Utils.isEmpty(this.lines[1]))) {\n          try {\n            value = Inline.parse(this.lines[0], exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n          if (typeof value === 'object') {\n            if (value instanceof Array) {\n              first = value[0];\n            } else {\n              for (key in value) {\n                first = value[key];\n                break;\n              }\n            }\n            if (typeof first === 'string' && first.indexOf('*') === 0) {\n              data = [];\n              for (n = 0, len3 = value.length; n < len3; n++) {\n                alias = value[n];\n                data.push(this.refs[alias.slice(1)]);\n              }\n              value = data;\n            }\n          }\n          return value;\n        } else if ((ref2 = Utils.ltrim(value).charAt(0)) === '[' || ref2 === '{') {\n          try {\n            return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n        throw new ParseException('Unable to parse.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      if (isRef) {\n        if (data instanceof Array) {\n          this.refs[isRef] = data[data.length - 1];\n        } else {\n          lastKey = null;\n          for (key in data) {\n            lastKey = key;\n          }\n          this.refs[isRef] = data[lastKey];\n        }\n      }\n    }\n    if (Utils.isEmpty(data)) {\n      return null;\n    } else {\n      return data;\n    }\n  };\n\n  Parser.prototype.getRealCurrentLineNb = function() {\n    return this.currentLineNb + this.offset;\n  };\n\n  Parser.prototype.getCurrentLineIndentation = function() {\n    return this.currentLine.length - Utils.ltrim(this.currentLine, ' ').length;\n  };\n\n  Parser.prototype.getNextEmbedBlock = function(indentation, includeUnindentedCollection) {\n    var data, indent, isItUnindentedCollection, newIndent, removeComments, removeCommentsPattern, unindentedEmbedBlock;\n    if (indentation == null) {\n      indentation = null;\n    }\n    if (includeUnindentedCollection == null) {\n      includeUnindentedCollection = false;\n    }\n    this.moveToNextLine();\n    if (indentation == null) {\n      newIndent = this.getCurrentLineIndentation();\n      unindentedEmbedBlock = this.isStringUnIndentedCollectionItem(this.currentLine);\n      if (!(this.isCurrentLineEmpty()) && 0 === newIndent && !unindentedEmbedBlock) {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    } else {\n      newIndent = indentation;\n    }\n    data = [this.currentLine.slice(newIndent)];\n    if (!includeUnindentedCollection) {\n      isItUnindentedCollection = this.isStringUnIndentedCollectionItem(this.currentLine);\n    }\n    removeCommentsPattern = this.PATTERN_FOLDED_SCALAR_END;\n    removeComments = !removeCommentsPattern.test(this.currentLine);\n    while (this.moveToNextLine()) {\n      indent = this.getCurrentLineIndentation();\n      if (indent === newIndent) {\n        removeComments = !removeCommentsPattern.test(this.currentLine);\n      }\n      if (removeComments && this.isCurrentLineComment()) {\n        continue;\n      }\n      if (this.isCurrentLineBlank()) {\n        data.push(this.currentLine.slice(newIndent));\n        continue;\n      }\n      if (isItUnindentedCollection && !this.isStringUnIndentedCollectionItem(this.currentLine) && indent === newIndent) {\n        this.moveToPreviousLine();\n        break;\n      }\n      if (indent >= newIndent) {\n        data.push(this.currentLine.slice(newIndent));\n      } else if (Utils.ltrim(this.currentLine).charAt(0) === '#') {\n\n      } else if (0 === indent) {\n        this.moveToPreviousLine();\n        break;\n      } else {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    }\n    return data.join(\"\\n\");\n  };\n\n  Parser.prototype.moveToNextLine = function() {\n    if (this.currentLineNb >= this.lines.length - 1) {\n      return false;\n    }\n    this.currentLine = this.lines[++this.currentLineNb];\n    return true;\n  };\n\n  Parser.prototype.moveToPreviousLine = function() {\n    this.currentLine = this.lines[--this.currentLineNb];\n  };\n\n  Parser.prototype.parseValue = function(value, exceptionOnInvalidType, objectDecoder) {\n    var e, foldedIndent, matches, modifiers, pos, ref, ref1, val;\n    if (0 === value.indexOf('*')) {\n      pos = value.indexOf('#');\n      if (pos !== -1) {\n        value = value.substr(1, pos - 2);\n      } else {\n        value = value.slice(1);\n      }\n      if (this.refs[value] === void 0) {\n        throw new ParseException('Reference \"' + value + '\" does not exist.', this.currentLine);\n      }\n      return this.refs[value];\n    }\n    if (matches = this.PATTERN_FOLDED_SCALAR_ALL.exec(value)) {\n      modifiers = (ref = matches.modifiers) != null ? ref : '';\n      foldedIndent = Math.abs(parseInt(modifiers));\n      if (isNaN(foldedIndent)) {\n        foldedIndent = 0;\n      }\n      val = this.parseFoldedScalar(matches.separator, this.PATTERN_DECIMAL.replace(modifiers, ''), foldedIndent);\n      if (matches.type != null) {\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        return Inline.parseScalar(matches.type + ' ' + val);\n      } else {\n        return val;\n      }\n    }\n    if ((ref1 = value.charAt(0)) === '[' || ref1 === '{' || ref1 === '\"' || ref1 === \"'\") {\n      while (true) {\n        try {\n          return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n        } catch (error) {\n          e = error;\n          if (e instanceof ParseMore && this.moveToNextLine()) {\n            value += \"\\n\" + Utils.trim(this.currentLine, ' ');\n          } else {\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n      }\n    } else {\n      if (this.isNextLineIndented()) {\n        value += \"\\n\" + this.getNextEmbedBlock();\n      }\n      return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n    }\n  };\n\n  Parser.prototype.parseFoldedScalar = function(separator, indicator, indentation) {\n    var isCurrentLineBlank, j, len, line, matches, newText, notEOF, pattern, ref, text;\n    if (indicator == null) {\n      indicator = '';\n    }\n    if (indentation == null) {\n      indentation = 0;\n    }\n    notEOF = this.moveToNextLine();\n    if (!notEOF) {\n      return '';\n    }\n    isCurrentLineBlank = this.isCurrentLineBlank();\n    text = '';\n    while (notEOF && isCurrentLineBlank) {\n      if (notEOF = this.moveToNextLine()) {\n        text += \"\\n\";\n        isCurrentLineBlank = this.isCurrentLineBlank();\n      }\n    }\n    if (0 === indentation) {\n      if (matches = this.PATTERN_INDENT_SPACES.exec(this.currentLine)) {\n        indentation = matches[0].length;\n      }\n    }\n    if (indentation > 0) {\n      pattern = this.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation];\n      if (pattern == null) {\n        pattern = new Pattern('^ {' + indentation + '}(.*)$');\n        Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation] = pattern;\n      }\n      while (notEOF && (isCurrentLineBlank || (matches = pattern.exec(this.currentLine)))) {\n        if (isCurrentLineBlank) {\n          text += this.currentLine.slice(indentation);\n        } else {\n          text += matches[1];\n        }\n        if (notEOF = this.moveToNextLine()) {\n          text += \"\\n\";\n          isCurrentLineBlank = this.isCurrentLineBlank();\n        }\n      }\n    } else if (notEOF) {\n      text += \"\\n\";\n    }\n    if (notEOF) {\n      this.moveToPreviousLine();\n    }\n    if ('>' === separator) {\n      newText = '';\n      ref = text.split(\"\\n\");\n      for (j = 0, len = ref.length; j < len; j++) {\n        line = ref[j];\n        if (line.length === 0 || line.charAt(0) === ' ') {\n          newText = Utils.rtrim(newText, ' ') + line + \"\\n\";\n        } else {\n          newText += line + ' ';\n        }\n      }\n      text = newText;\n    }\n    if ('+' !== indicator) {\n      text = Utils.rtrim(text);\n    }\n    if ('' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, \"\\n\");\n    } else if ('-' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, '');\n    }\n    return text;\n  };\n\n  Parser.prototype.isNextLineIndented = function(ignoreComments) {\n    var EOF, currentIndentation, ret;\n    if (ignoreComments == null) {\n      ignoreComments = true;\n    }\n    currentIndentation = this.getCurrentLineIndentation();\n    EOF = !this.moveToNextLine();\n    if (ignoreComments) {\n      while (!EOF && this.isCurrentLineEmpty()) {\n        EOF = !this.moveToNextLine();\n      }\n    } else {\n      while (!EOF && this.isCurrentLineBlank()) {\n        EOF = !this.moveToNextLine();\n      }\n    }\n    if (EOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() > currentIndentation) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isCurrentLineEmpty = function() {\n    var trimmedLine;\n    trimmedLine = Utils.trim(this.currentLine, ' ');\n    return trimmedLine.length === 0 || trimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.isCurrentLineBlank = function() {\n    return '' === Utils.trim(this.currentLine, ' ');\n  };\n\n  Parser.prototype.isCurrentLineComment = function() {\n    var ltrimmedLine;\n    ltrimmedLine = Utils.ltrim(this.currentLine, ' ');\n    return ltrimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.cleanup = function(value) {\n    var count, i, indent, j, l, len, len1, line, lines, ref, ref1, ref2, smallestIndent, trimmedValue;\n    if (value.indexOf(\"\\r\") !== -1) {\n      value = value.split(\"\\r\\n\").join(\"\\n\").split(\"\\r\").join(\"\\n\");\n    }\n    count = 0;\n    ref = this.PATTERN_YAML_HEADER.replaceAll(value, ''), value = ref[0], count = ref[1];\n    this.offset += count;\n    ref1 = this.PATTERN_LEADING_COMMENTS.replaceAll(value, '', 1), trimmedValue = ref1[0], count = ref1[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n    }\n    ref2 = this.PATTERN_DOCUMENT_MARKER_START.replaceAll(value, '', 1), trimmedValue = ref2[0], count = ref2[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n      value = this.PATTERN_DOCUMENT_MARKER_END.replace(value, '');\n    }\n    lines = value.split(\"\\n\");\n    smallestIndent = -1;\n    for (j = 0, len = lines.length; j < len; j++) {\n      line = lines[j];\n      if (Utils.trim(line, ' ').length === 0) {\n        continue;\n      }\n      indent = line.length - Utils.ltrim(line).length;\n      if (smallestIndent === -1 || indent < smallestIndent) {\n        smallestIndent = indent;\n      }\n    }\n    if (smallestIndent > 0) {\n      for (i = l = 0, len1 = lines.length; l < len1; i = ++l) {\n        line = lines[i];\n        lines[i] = line.slice(smallestIndent);\n      }\n      value = lines.join(\"\\n\");\n    }\n    return value;\n  };\n\n  Parser.prototype.isNextLineUnIndentedCollection = function(currentIndentation) {\n    var notEOF, ret;\n    if (currentIndentation == null) {\n      currentIndentation = null;\n    }\n    if (currentIndentation == null) {\n      currentIndentation = this.getCurrentLineIndentation();\n    }\n    notEOF = this.moveToNextLine();\n    while (notEOF && this.isCurrentLineEmpty()) {\n      notEOF = this.moveToNextLine();\n    }\n    if (false === notEOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() === currentIndentation && this.isStringUnIndentedCollectionItem(this.currentLine)) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isStringUnIndentedCollectionItem = function() {\n    return this.currentLine === '-' || this.currentLine.slice(0, 2) === '- ';\n  };\n\n  return Parser;\n\n})();\n\nmodule.exports = Parser;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = (function() {\n  Pattern.prototype.regex = null;\n\n  Pattern.prototype.rawRegex = null;\n\n  Pattern.prototype.cleanedRegex = null;\n\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function(str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n\n  Pattern.prototype.test = function(str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function(str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function(str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n\n  return Pattern;\n\n})();\n\nmodule.exports = Pattern;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Unescaper, Utils;\n\nUtils = require('./Utils');\n\nPattern = require('./Pattern');\n\nUnescaper = (function() {\n  function Unescaper() {}\n\n  Unescaper.PATTERN_ESCAPED_CHARACTER = new Pattern('\\\\\\\\([0abt\\tnvfre \"\\\\/\\\\\\\\N_LP]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})');\n\n  Unescaper.unescapeSingleQuotedString = function(value) {\n    return value.replace(/\\'\\'/g, '\\'');\n  };\n\n  Unescaper.unescapeDoubleQuotedString = function(value) {\n    if (this._unescapeCallback == null) {\n      this._unescapeCallback = (function(_this) {\n        return function(str) {\n          return _this.unescapeCharacter(str);\n        };\n      })(this);\n    }\n    return this.PATTERN_ESCAPED_CHARACTER.replace(value, this._unescapeCallback);\n  };\n\n  Unescaper.unescapeCharacter = function(value) {\n    var ch;\n    ch = String.fromCharCode;\n    switch (value.charAt(1)) {\n      case '0':\n        return ch(0);\n      case 'a':\n        return ch(7);\n      case 'b':\n        return ch(8);\n      case 't':\n        return \"\\t\";\n      case \"\\t\":\n        return \"\\t\";\n      case 'n':\n        return \"\\n\";\n      case 'v':\n        return ch(11);\n      case 'f':\n        return ch(12);\n      case 'r':\n        return ch(13);\n      case 'e':\n        return ch(27);\n      case ' ':\n        return ' ';\n      case '\"':\n        return '\"';\n      case '/':\n        return '/';\n      case '\\\\':\n        return '\\\\';\n      case 'N':\n        return ch(0x0085);\n      case '_':\n        return ch(0x00A0);\n      case 'L':\n        return ch(0x2028);\n      case 'P':\n        return ch(0x2029);\n      case 'x':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 2)));\n      case 'u':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 4)));\n      case 'U':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 8)));\n      default:\n        return '';\n    }\n  };\n\n  return Unescaper;\n\n})();\n\nmodule.exports = Unescaper;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Utils,\n  hasProp = {}.hasOwnProperty;\n\nPattern = require('./Pattern');\n\nUtils = (function() {\n  function Utils() {}\n\n  Utils.REGEX_LEFT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_RIGHT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_SPACES = /\\s+/g;\n\n  Utils.REGEX_DIGITS = /^\\d+$/;\n\n  Utils.REGEX_OCTAL = /[^0-7]/gi;\n\n  Utils.REGEX_HEXADECIMAL = /[^a-f0-9]/gi;\n\n  Utils.PATTERN_DATE = new Pattern('^' + '(?<year>[0-9][0-9][0-9][0-9])' + '-(?<month>[0-9][0-9]?)' + '-(?<day>[0-9][0-9]?)' + '(?:(?:[Tt]|[ \\t]+)' + '(?<hour>[0-9][0-9]?)' + ':(?<minute>[0-9][0-9])' + ':(?<second>[0-9][0-9])' + '(?:\\.(?<fraction>[0-9]*))?' + '(?:[ \\t]*(?<tz>Z|(?<tz_sign>[-+])(?<tz_hour>[0-9][0-9]?)' + '(?::(?<tz_minute>[0-9][0-9]))?))?)?' + '$', 'i');\n\n  Utils.LOCAL_TIMEZONE_OFFSET = new Date().getTimezoneOffset() * 60 * 1000;\n\n  Utils.trim = function(str, _char) {\n    var regexLeft, regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexLeft, '').replace(regexRight, '');\n  };\n\n  Utils.ltrim = function(str, _char) {\n    var regexLeft;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    return str.replace(regexLeft, '');\n  };\n\n  Utils.rtrim = function(str, _char) {\n    var regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexRight, '');\n  };\n\n  Utils.isEmpty = function(value) {\n    return !value || value === '' || value === '0' || (value instanceof Array && value.length === 0) || this.isEmptyObject(value);\n  };\n\n  Utils.isEmptyObject = function(value) {\n    var k;\n    return value instanceof Object && ((function() {\n      var results;\n      results = [];\n      for (k in value) {\n        if (!hasProp.call(value, k)) continue;\n        results.push(k);\n      }\n      return results;\n    })()).length === 0;\n  };\n\n  Utils.subStrCount = function(string, subString, start, length) {\n    var c, i, j, len, ref, sublen;\n    c = 0;\n    string = '' + string;\n    subString = '' + subString;\n    if (start != null) {\n      string = string.slice(start);\n    }\n    if (length != null) {\n      string = string.slice(0, length);\n    }\n    len = string.length;\n    sublen = subString.length;\n    for (i = j = 0, ref = len; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      if (subString === string.slice(i, sublen)) {\n        c++;\n        i += sublen - 1;\n      }\n    }\n    return c;\n  };\n\n  Utils.isDigits = function(input) {\n    this.REGEX_DIGITS.lastIndex = 0;\n    return this.REGEX_DIGITS.test(input);\n  };\n\n  Utils.octDec = function(input) {\n    this.REGEX_OCTAL.lastIndex = 0;\n    return parseInt((input + '').replace(this.REGEX_OCTAL, ''), 8);\n  };\n\n  Utils.hexDec = function(input) {\n    this.REGEX_HEXADECIMAL.lastIndex = 0;\n    input = this.trim(input);\n    if ((input + '').slice(0, 2) === '0x') {\n      input = (input + '').slice(2);\n    }\n    return parseInt((input + '').replace(this.REGEX_HEXADECIMAL, ''), 16);\n  };\n\n  Utils.utf8chr = function(c) {\n    var ch;\n    ch = String.fromCharCode;\n    if (0x80 > (c %= 0x200000)) {\n      return ch(c);\n    }\n    if (0x800 > c) {\n      return ch(0xC0 | c >> 6) + ch(0x80 | c & 0x3F);\n    }\n    if (0x10000 > c) {\n      return ch(0xE0 | c >> 12) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n    }\n    return ch(0xF0 | c >> 18) + ch(0x80 | c >> 12 & 0x3F) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n  };\n\n  Utils.parseBoolean = function(input, strict) {\n    var lowerInput;\n    if (strict == null) {\n      strict = true;\n    }\n    if (typeof input === 'string') {\n      lowerInput = input.toLowerCase();\n      if (!strict) {\n        if (lowerInput === 'no') {\n          return false;\n        }\n      }\n      if (lowerInput === '0') {\n        return false;\n      }\n      if (lowerInput === 'false') {\n        return false;\n      }\n      if (lowerInput === '') {\n        return false;\n      }\n      return true;\n    }\n    return !!input;\n  };\n\n  Utils.isNumeric = function(input) {\n    this.REGEX_SPACES.lastIndex = 0;\n    return typeof input === 'number' || typeof input === 'string' && !isNaN(input) && input.replace(this.REGEX_SPACES, '') !== '';\n  };\n\n  Utils.stringToDate = function(str) {\n    var date, day, fraction, hour, info, minute, month, second, tz_hour, tz_minute, tz_offset, year;\n    if (!(str != null ? str.length : void 0)) {\n      return null;\n    }\n    info = this.PATTERN_DATE.exec(str);\n    if (!info) {\n      return null;\n    }\n    year = parseInt(info.year, 10);\n    month = parseInt(info.month, 10) - 1;\n    day = parseInt(info.day, 10);\n    if (info.hour == null) {\n      date = new Date(Date.UTC(year, month, day));\n      return date;\n    }\n    hour = parseInt(info.hour, 10);\n    minute = parseInt(info.minute, 10);\n    second = parseInt(info.second, 10);\n    if (info.fraction != null) {\n      fraction = info.fraction.slice(0, 3);\n      while (fraction.length < 3) {\n        fraction += '0';\n      }\n      fraction = parseInt(fraction, 10);\n    } else {\n      fraction = 0;\n    }\n    if (info.tz != null) {\n      tz_hour = parseInt(info.tz_hour, 10);\n      if (info.tz_minute != null) {\n        tz_minute = parseInt(info.tz_minute, 10);\n      } else {\n        tz_minute = 0;\n      }\n      tz_offset = (tz_hour * 60 + tz_minute) * 60000;\n      if ('-' === info.tz_sign) {\n        tz_offset *= -1;\n      }\n    }\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (tz_offset) {\n      date.setTime(date.getTime() - tz_offset);\n    }\n    return date;\n  };\n\n  Utils.strRepeat = function(str, number) {\n    var i, res;\n    res = '';\n    i = 0;\n    while (i < number) {\n      res += str;\n      i++;\n    }\n    return res;\n  };\n\n  Utils.getStringFromFile = function(path, callback) {\n    var data, fs, j, len1, name, ref, req, xhr;\n    if (callback == null) {\n      callback = null;\n    }\n    xhr = null;\n    if (typeof window !== \"undefined\" && window !== null) {\n      if (window.XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n      } else if (window.ActiveXObject) {\n        ref = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.3.0\", \"Msxml2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          name = ref[j];\n          try {\n            xhr = new ActiveXObject(name);\n          } catch (error) {}\n        }\n      }\n    }\n    if (xhr != null) {\n      if (callback != null) {\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.status === 0) {\n              return callback(xhr.responseText);\n            } else {\n              return callback(null);\n            }\n          }\n        };\n        xhr.open('GET', path, true);\n        return xhr.send(null);\n      } else {\n        xhr.open('GET', path, false);\n        xhr.send(null);\n        if (xhr.status === 200 || xhr.status === 0) {\n          return xhr.responseText;\n        }\n        return null;\n      }\n    } else {\n      req = require;\n      fs = req('fs');\n      if (callback != null) {\n        return fs.readFile(path, function(err, data) {\n          if (err) {\n            return callback(null);\n          } else {\n            return callback(String(data));\n          }\n        });\n      } else {\n        data = fs.readFileSync(path);\n        if (data != null) {\n          return String(data);\n        }\n        return null;\n      }\n    }\n  };\n\n  return Utils;\n\n})();\n\nmodule.exports = Utils;\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Parser, Utils, Yaml;\n\nParser = require('./Parser');\n\nDumper = require('./Dumper');\n\nUtils = require('./Utils');\n\nYaml = (function() {\n  function Yaml() {}\n\n  Yaml.parse = function(input, exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    return new Parser().parse(input, exceptionOnInvalidType, objectDecoder);\n  };\n\n  Yaml.parseFile = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    var input;\n    if (callback == null) {\n      callback = null;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    if (callback != null) {\n      return Utils.getStringFromFile(path, (function(_this) {\n        return function(input) {\n          var result;\n          result = null;\n          if (input != null) {\n            result = _this.parse(input, exceptionOnInvalidType, objectDecoder);\n          }\n          callback(result);\n        };\n      })(this));\n    } else {\n      input = Utils.getStringFromFile(path);\n      if (input != null) {\n        return this.parse(input, exceptionOnInvalidType, objectDecoder);\n      }\n      return null;\n    }\n  };\n\n  Yaml.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var yaml;\n    if (inline == null) {\n      inline = 2;\n    }\n    if (indent == null) {\n      indent = 4;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    yaml = new Dumper();\n    yaml.indentation = indent;\n    return yaml.dump(input, inline, 0, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.stringify = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    return this.dump(input, inline, indent, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.load = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    return this.parseFile(path, callback, exceptionOnInvalidType, objectDecoder);\n  };\n\n  return Yaml;\n\n})();\n\nif (typeof window !== \"undefined\" && window !== null) {\n  window.YAML = Yaml;\n}\n\nif (typeof window === \"undefined\" || window === null) {\n  this.YAML = Yaml;\n}\n\nmodule.exports = Yaml;\n","\nimport {AbstractModule} from \"phusion/src/build/module/AbstractModule\"\nimport {AutoloadModuleInterface} from \"./AutoloadModuleInterface\";\nimport {Config} from \"phusion/src/build/module/Config/Entity/Config\";\n\nexport class AutoloadModule extends AbstractModule implements AutoloadModuleInterface\n{\n\tprotected nodeJsPath;\n\n\tpublic generateClassmap(projectRootDirPath: string, outputFilePath: string, groups: Object): boolean\n\t{\n\t\tlet fileSystemModule = this.getModuleContainer().getFileSystemModule();\n\t\tlet combinedClassmap = {};\n\t\tlet classmap = {};\n\t\tlet classPathMap = {};\n\n\t\t// For each file recursively\n\t\tfileSystemModule.forEachFileRecursively(\n\t\t\tprojectRootDirPath,\n\t\t\tfunction(fileName: string, absoluteFilePath: string)\n\t\t\t{\n\t\t\t\t// If node_modules, continue\n\t\t\t\tif (absoluteFilePath.indexOf('node_modules') !== -1)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (groups instanceof Config)\n\t\t\t\t{\n\t\t\t\t\tgroups = groups.toObject();\n\t\t\t\t}\n\n\t\t\t\t// For each group\n\t\t\t\t// e.g. \"component\": \"([A-z]+Component.ts)\"\n\t\t\t\tfor (let groupName in groups)\n\t\t\t\t{\n\t\t\t\t\tlet groupRegex = groups[groupName];\n\n\t\t\t\t\tlet regExp = new RegExp(groupRegex);\n\n\t\t\t\t\t// If the file name matches the regex\n\t\t\t\t\tif (regExp.test(fileName))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Build relative file path\n\t\t\t\t\t\tlet rootPathPlaceholder = '{src}';\n\n\t\t\t\t\t\t// Replace everything up to the project root with a placeholder\n\t\t\t\t\t\tlet pathFromProjectRoot = absoluteFilePath.replace(projectRootDirPath, rootPathPlaceholder);\n\n\t\t\t\t\t\tif (absoluteFilePath.charAt(0) !== '/')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trootPathPlaceholder+= '/';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add it to the combined classmap object under the correct key and set the file path\n\t\t\t\t\t\tif (!combinedClassmap[groupName])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcombinedClassmap[groupName] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// classmap\n\t\t\t\t\t\tif (!classmap[groupName])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclassmap[groupName] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Class path map\n\t\t\t\t\t\tif (!classPathMap[groupName])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclassPathMap[groupName] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet fileNameParts = fileName.split('.');\n\t\t\t\t\t\tlet className = fileNameParts[0];\n\n\t\t\t\t\t\tclassmap[groupName][className] = className;\n\t\t\t\t\t\tclassPathMap[groupName][className] = pathFromProjectRoot;\n\n\t\t\t\t\t\tcombinedClassmap[groupName][className] = {\n\t\t\t\t\t\t\t'class': className,\n\t\t\t\t\t\t\t'filePath': pathFromProjectRoot\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * Write classmap file\n\t\t */\n\n\t\t// If file already exists, empty it\n\t\tfileSystemModule.writeFile(outputFilePath, '');\n\n\t\t// Stringify classmap\n\t\tlet classmapString = JSON.stringify(classmap, null, 2);\n\n\t\t// Remove quotes from class names\n\t\tclassmapString = this.removeQuotesFromClassNames(classmap, classmapString);\n\n\t\t// Remove filename to get outputDirPath\n\t\tlet outputDirPath = outputFilePath.replace(/\\/[^\\/]+\\..+$/, '');\n\n\t\t// Add import statement block\n\t\tlet importStatementBlockAsString = this.getImportStatementBlock(classPathMap, projectRootDirPath, outputDirPath);\n\n\t\tlet fileContents = importStatementBlockAsString + '\\n' + 'module.exports = ' + classmapString + ';\\n';\n\n\t\t// Write classmap to output file\n\t\tfileSystemModule.writeFile(outputFilePath, fileContents);\n\n\t\t/**\n\t\t * Write class path map file\n\t\t */\n\n\t\tlet classPathMapOutputFilePath = outputFilePath.replace(/\\/[^/]+\\.[^\\.]+$/, '/pathmap.js');\n\n\t\t// Stringify classmap\n\t\tlet pathMapString = JSON.stringify(classPathMap, null, 2);\n\n\t\tpathMapString = this.removeQuotesFromClassNames(classmap, pathMapString);\n\n\t\tlet pathMapFileContents = '\\n' + 'module.exports = ' + pathMapString + ';\\n';\n\n\t\t// Write classmap to output file\n\t\tfileSystemModule.writeFile(classPathMapOutputFilePath, pathMapFileContents);\n\n\t\treturn true;\n\t}\n\n\tpublic getImportStatementBlock(classPathMap: Object, projectRootAbsolutePath: string, importFromDirPath: string): string\n\t{\n\t\tconst importStatementTemplate = \"const {{className}} = require(\\\"{relativePath}\\\");\\n\";\n\t\tlet importStatementBlock = \"\";\n\n\t\tlet fileSystemModule = this.getModuleContainer().getFileSystemModule();\n\n\t\t// How to get from project root from importDirPath\n\t\tlet srcReplacement = fileSystemModule.getRelativePathBetweenDirs(importFromDirPath, projectRootAbsolutePath);\n\n\t\tlet classesAddedToImportBlock = [];\n\n\t\tfor (let groupName in classPathMap)\n\t\t{\n\t\t\t// Comment for the group\n\t\t\timportStatementBlock+= \"\\n// \" + groupName + \"\\n\";\n\n\t\t\t// Get all classes in this group\n\t\t\tlet groupClassmap = classPathMap[groupName];\n\n\t\t\t// For each class in the group\n\t\t\tfor (let className in groupClassmap)\n\t\t\t\tif (groupClassmap.hasOwnProperty(className))\n\t\t\t{\n\t\t\t\t// If import statement already added for this class\n\t\t\t\tif (classesAddedToImportBlock.indexOf(className) !== -1)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet relativePathFromRoot = groupClassmap[className];\n\n\t\t\t\tlet importPath = relativePathFromRoot\n\t\t\t\t\t// Replace {src} placeholder\n\t\t\t\t\t.replace('{src}', srcReplacement)\n\t\t\t\t\t// Remove file extension\n\t\t\t\t\t.replace(/\\.[^.]+$/, '');\n\n\t\t\t\tlet importStatement = importStatementTemplate;\n\n\t\t\t\timportStatement = importStatement\n\t\t\t\t\t.replace('{className}', className)\n\t\t\t\t\t.replace('{relativePath}', importPath);\n\n\t\t\t\timportStatementBlock+= importStatement;\n\n\t\t\t\tclassesAddedToImportBlock.push(className);\n\t\t\t}\n\t\t}\n\n\t\treturn importStatementBlock;\n\t}\n\n\tpublic removeQuotesFromClassNames(classmap: Object, jsonString: string): string\n\t{\n\t\t// Remove quotes around class names\n\t\tlet classNamesToBeReplaced = [];\n\n\t\t// For each key in the classmap\n\t\tfor (let groupName in classmap)\n\t\t{\n\t\t\tif (classmap.hasOwnProperty(groupName))\n\t\t\t{\n\t\t\t\t// Get an array of file path maps for all classes under this key\n\t\t\t\tlet group = classmap[groupName];\n\n\t\t\t\t// Get array of class names\n\t\t\t\tlet classes = Object.keys(group);\n\n\t\t\t\t// Add them to array of class names to be replaced\n\t\t\t\tclassNamesToBeReplaced = classNamesToBeReplaced.concat(classes);\n\t\t\t}\n\t\t}\n\n\t\t// For each class name in that array\n\t\tfor (let classNameToReplace of classNamesToBeReplaced)\n\t\t{\n\t\t\t// Run a string replace on the jsonString to remove any instances surrounded by quotes\n\t\t\tlet regexPatternToReplace = new RegExp('\\\"' + classNameToReplace + '\\\"', 'g');\n\t\t\tjsonString = jsonString.replace(regexPatternToReplace, classNameToReplace);\n\t\t}\n\n\t\treturn jsonString;\n\t}\n}","\nimport {ModuleContainer as PhusionModuleContainer} from \"phusion/src/build/module/ModuleContainer\";\nimport {AutoloadModule} from \"./Autoload/AutoloadModule\";\nimport {AutoloadModuleInterface} from \"./Autoload/AutoloadModuleInterface\";\n\nexport class ModuleContainer extends PhusionModuleContainer\n{\n\tprotected autoloadModule: AutoloadModuleInterface;\n\n\tpublic getAutoloadModule(): AutoloadModuleInterface\n\t{\n\t\tif (!this.autoloadModule)\n\t\t{\n\t\t\tthis.autoloadModule = new AutoloadModule(this);\n\t\t}\n\n\t\treturn this.autoloadModule;\n\t}\n}","\nimport {AbstractTask} from 'phusion/src/build/task/AbstractTask';\nimport {ModuleContainer} from \"../module/ModuleContainer\";\n\nexport class ClassmapTask extends AbstractTask\n{\n\tprotected moduleContainer: ModuleContainer;\n\n\tpublic exec()\n\t{\n\t\tlet taskConfig = this.getTaskConfig();\n\n\t\tlet projectRoot = taskConfig.getByPath('projectRootDirPath');\n\t\tlet outputFilePath = taskConfig.getByPath('outputFilePath');\n\t\tlet groups = taskConfig.getByPath('groups');\n\n\t\tthis\n\t\t\t.getModuleContainer()\n\t\t\t.getAutoloadModule()\n\t\t\t.generateClassmap(projectRoot, outputFilePath, groups);\n\t}\n\n\tprotected getRequiredTaskConfigPaths(): Object\n\t{\n\t\treturn {\n\t\t\tprojectRootDirPath: \"string\",\n\t\t\toutputFilePath: \"string\",\n\t\t\tgroups: \"object\"\n\t\t};\n\t}\n\n\tprotected getDefaultTaskConfig(): Object\n\t{\n\t\tlet cwd = process.cwd();\n\n\t\treturn {\n\t\t\tprojectRootDirPath: cwd,\n\t\t\toutputFilePath: cwd + '/cache/classmap.js',\n\t\t\tgroups: {\n\t\t\t\t\"component\": '^(?!Abstract|abstract.*$)[^\\\\s]*[Cc]omponent\\\\.ts$' // All TS classes that end in the word \"Component\" and do not start with the word \"Abstract\"\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected getModuleContainer(): ModuleContainer\n\t{\n\t\tif (!this.moduleContainer)\n\t\t{\n\t\t\tthis.moduleContainer = new ModuleContainer();\n\t\t}\n\n\t\treturn this.moduleContainer;\n\t}\n}","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");"],"sourceRoot":""}